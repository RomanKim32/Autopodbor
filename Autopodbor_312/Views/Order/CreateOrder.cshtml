<link type="text/css" rel="stylesheet" href="~/css/Order/CreateOrder.css" />
@model Autopodbor_312.ViewModel.OrderViewModel
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer localizer;
@using System.Threading;

@{
	ViewBag.Title = @localizer["orderTitle"];
}

<h1>@localizer["orderTitle"]</h1>

@if (@Thread.CurrentThread.CurrentCulture.DisplayName == "Русский")
{
	<h4>@Model.Order.Services.NameRu</h4>
}
else
{
	<h4>@Model.Order.Services.NameKy</h4>
}
<hr />
<div class="row">
	<div class="col-md-4">
		<form action="" id="orderForm" role="form">
			<div asp-validation-summary="ModelOnly" class="text-danger"></div>
			<div class="form-group">
				<label class="control-label">@localizer["nameLabelOrderForm"]</label>
				<input id="UserName" class="form-control" />
			</div>
			<div class="form-group">
				<label class="control-label">@localizer["phoneNumberLabelOrderForm"]</label>
				<input id="PhoneNumber" class="form-control" required="required" oninvalid="this.setCustomValidity('@localizer["customValidityPhoneNumber"]')" onchange="this.setCustomValidity('')" />
			</div>
			<div class="form-group">
				<label class="control-label">@localizer["emailLabelOrderForm"]</label>
				<input id="Email" class="form-control" type="email" oninvalid="this.setCustomValidity('@localizer["customValidityEmail"]')" onchange="this.setCustomValidity('')" />
			</div>
			<div class="form-group">
				<label asp-for="@Model.Order.CarsBrandsId" class="control-label">@localizer["brandLabelOrderForm"]</label>
				<select onchange="GetSelectedTextValue(this)" id="brand" class="form-control">
					@foreach (var brand in Model.CarsBrands)
					{
						<option data-id="@brand.Id" value="@brand.Id">@brand.Brand</option>
					}
				</select>
			</div>
			@if (@Model.Order.Services.NameRu == "Выездной осмотр")
			{
				<div class="form-group">
					<label class="control-label">Модель</label>
					<select class="form-control" id="select-model">
						<option value="">Выберите модель</option>
					</select>
				</div>
			}

			<div class="form-group">
				<label asp-for="@Model.Order.CarsBodyTypesId" class="control-label">@localizer["carsBodyLabelOrderForm"]</label>
				<select id="CarsBodyTypesId" class="form-control">
					@foreach (var body in Model.CarsBodyTypes)
					{
						<option value="@body.Id">@body.BodyType</option>
					}
				</select>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Order.CarsYearsId" class="control-label">@localizer["manufacturesYearLabelOrderForm"]</label>
				<select id="CarsYearsId" class="form-control">
					@foreach (var year in Model.CarsYears)
					{
						<option value="@year.Id">@year.ManufacturesYear</option>
					}
				</select>
			</div>
			<div class="form-group">
				<label asp-for="@Model.Order.CarsFuelsId" class="control-label">@localizer["сarsFuelLebelOrderForm"]</label>
				<select id="CarsFuelsId" class="form-control">
					@foreach (var fuel in Model.CarsFuels)
					{
						<option value="@fuel.Id">@fuel.FuelsType</option>
					}
				</select>
			</div>
			<div class="form-group">
				<label class="control-label">@localizer["commentLabelOrderForm"]</label>
				<textarea id="Comment" class="form-control"></textarea>
			</div>
			<input type="hidden" id="ServiceId" value="@Model.Order.ServicesId">
			<div class="form-group">
				<button type="submit" class="btn btn-primary">@localizer["orderButtonOrderForm"]</button>
			</div>
		</form>
	</div>
</div>

@section Scripts
	{
	<script>
		let Id = '';
		function GetId(id) {
			Id = id;
		};
		const selectModal = $('#select-model');
		const addOption = (options) => {
			if (options.length > 0) {
				options.forEach((item) => {
					selectModal.append(`<option value="${item.id}">${item.model}</option>`)
				});
				return;
			}
			selectModal.append('<option value="">Нет моделей</option>');
		};
		function GetSelectedTextValue(brand) {
			var brandId = brand.options[brand.selectedIndex].getAttribute('data-id');
			console.log(brandId);
			$.ajax({
				url: '@Url.Action("GetModel", "Calculator")',
				type: 'POST',
				data: {
					'brandId': brandId,
				},
				success: (response) => {
					selectModal.empty();
					addOption(response.carsBrandsModels);
					console.log(response);
				}
			});
			event.preventDefault();
		};

		$(document).ready(function () {
			$("#orderForm").submit(function (e) {
				e.preventDefault();
				let name = $('#UserName').val();
				let number = $('#PhoneNumber').val();
				let email = $('#Email').val();
				let carsBrandsId = $('#brand').val();
				let carsBodyTypesId = $('#CarsBodyTypesId').val();
				let carsYearsId = $('#CarsYearsId').val();
				let carsFuelsId = $('#CarsFuelsId').val();
				let comment = $('#Comment').val();
				let serviceId = $('#ServiceId').val();
				let carsBrandsModelId = $('#select-model').val();
				$.ajax({
					url: '@Url.Action("CreateOrder", "Order")',
					type: 'POST',
					data: {
						'userName': name,
						'phoneNumber': number,
						'email': email,
						'carsBrandsId': carsBrandsId,
						'carsBodyTypesId': carsBodyTypesId,
						'carsYearsId': carsYearsId,
						'carsFuelsId': carsFuelsId,
						'comment': comment,
						'serviceId': serviceId,
						'modelId': carsBrandsModelId,
					},
					success: function () {
						alert("Заказ успешно оформлен!");
					},
					failure: function () {
						alert("Произошла ошибка при заказе!");
					},
					error: function () {
						alert("Произошла ошибка при заказе!");
					}
				});
			});
		});

	</script>
}

